#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define DEV     3
#define FUNC    4

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ESC>, <&kp CAPS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | ESC  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | DEV |

            bindings = <
                &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
                &td0      &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
                &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                               &kp LCTRL &mo LOWER &kp SPACE   &kp RET &mo RAISE &mo DEV
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | CTRL |     |     |     |     |     |   | LFT | DWN |  UP | RGT | HOME| END  |
            // | SHFT | BT1 | BT2 | BT3 | BT4 | BT5 |   | PREV| NEXT| VOLD| VOLU| MUTE|      |
            //                    |     |     |     |   |     |     |     |

            bindings = <
                &kp TAB   &kp N1 &kp N2 &kp N3 &kp N4 &kp N5         &kp N6    &kp N7    &kp N8    &kp N9    &kp N0   &kp BSPC
                &kp LCTRL &trans &trans &trans &trans &trans         &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &kp HOME &kp END
                &kp LSHFT &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp C_PREV &kp C_NEXT &kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE &trans
                                        &trans  &trans &trans         &trans    &mo FUNC  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    |     |     |     |   |     |     |     |

            bindings = <
                &kp TAB   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
                &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
                &kp LSHFT &trans   &trans &trans   &trans   &bt BT_CLR  &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                                           &trans  &mo FUNC &trans      &trans    &trans    &trans
            >;
        };

        dev_layer {
            // -----------------------------------------------------------------------------------------
            // | ESC  | F1  | F2  | F3  | F4  | F5  |   | F6  | F7  | F8  | F9  | F10 | DEL  |
            // | CTRL | UNDO| CUT | COPY|PASTE| <<  |   | >>  | {}  | ()  | []  | <>  | PIPE |
            // | SHFT | F11 | F12 |     |     |     |   |     |     |     |     |     |      |
            //                    |     |     |     |   |     |     |     |

            bindings = <
                &kp ESC   &kp F1    &kp F2      &kp F3      &kp F4      &kp F5          &kp F6    &kp F7    &kp F8    &kp F9    &kp F10   &kp DEL
                &kp LCTRL &kp LC(Z) &kp LC(X)   &kp LC(C)   &kp LC(V)   &kp LC(LEFT)    &kp LC(RIGHT) &kp LS(LBRC) &kp LS(N9) &kp LS(LBKT) &kp LT &kp PIPE
                &kp LSHFT &kp F11   &kp F12     &trans      &trans      &trans          &trans    &trans    &trans    &trans    &trans    &trans
                                                &trans      &trans      &trans          &trans    &trans    &trans
            >;
        };

        function_layer {
            // -----------------------------------------------------------------------------------------
            // | BT_CLR| BT0 | BT1 | BT2 | BT3 | BT4 |   |     |     |     |     |     | DEL  |
            // | USB   | BLE |     |     |     |     |   |     |     |     |     |     |      |
            // | SHFT  |     |     |     |     |     |   |     |     |     |     |     | BOOT |
            //                     |     |     |     |   |     |     |     |

            bindings = <
                &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans  &trans  &trans  &trans  &trans  &kp DEL
                &out OUT_USB &out OUT_BLE &trans     &trans       &trans       &trans         &trans  &trans  &trans  &trans  &trans  &trans
                &kp LSHFT    &trans       &trans     &trans       &trans       &trans         &trans  &trans  &trans  &trans  &trans  &bootloader
                                                     &trans       &trans       &trans         &trans  &trans  &trans
            >;
        };
    };
};
