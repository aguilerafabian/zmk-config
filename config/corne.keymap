#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT_LAYER   0
#define LOWER_LAYER     1
#define RAISE_LAYER     2
#define FUNCTIONS_LAYER 3
#define ADMIN_LAYER     4

// SAGC(Shift / Command-Alt / Gui / Control) as home row mod

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LEFT";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>; // Right-side keys
            hold-trigger-on-release;
        };
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_RIGHT";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>; // Left-side keys
            hold-trigger-on-release;
        };
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ESC>, <&kp CAPS>;
        };
        td_shift: tap_dance_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_SHIFT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&sk LSHFT>;
        };
        tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer ON";
            toggle-mode = "on";
        };
        tog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer OFF";
            toggle-mode = "off";
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_esc {
            layers = <DEFAULT_LAYER>;
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp ESC>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESC     &kp Q        &kp W        &kp E          &kp R           &kp T                       &kp Y          &kp U            &kp I               &kp O        &kp P            &kp BSPC
                &kp TAB     &hml LSHFT A &hml LGUI S  &hml LALT D    &hml LCTRL F    &kp G                       &kp H          &hmr RCTRL J     &hmr RALT K         &hmr RGUI L  &hmr RSHFT COLON &kp DOUBLE_QUOTES
                &kp CAPS    &kp Z        &kp X        &kp C          &kp V           &kp B                       &kp N          &kp M            &kp COMMA           &kp DOT      &kp FSLH         &kp DELETE
                                                      &kp LEFT_SHIFT &mo LOWER_LAYER &hml LSHFT SPACE            &hmr RSHFT RET &mo RAISE_LAYER  &mo FUNCTIONS_LAYER
            >;
        };

        lower_layer {
            bindings = <
                &kp ESC     &kp N1       &kp N2       &kp N3         &kp N4          &kp N5                      &kp N6         &kp N7           &kp N8              &kp N9       &kp N0           &kp BSPC
                &kp TAB     &kp RG(A)    &kp ASTRK    &kp MINUS      &kp PLUS        &kp EQUAL                   &kp LEFT       &kp DOWN         &kp UP              &kp RIGHT    &none            &none
                &kp RC(S)   &kp RG(Z)    &kp RG(X)    &kp RG(C)      &kp RG(V)       &none                       &none          &none            &kp COMMA           &kp DOT      &kp FSLH         &kp DELETE
                                                      &trans         &trans          &kp SPACE                   &kp RET        &mo ADMIN_LAYER  &trans
            >;
        };

        raise_layer {
            bindings = <
                &kp ESC     &kp EXCL     &kp AT       &kp HASH       &kp DLLR        &kp PRCNT                   &kp CARET      &kp GRAVE        &kp PIPE            &none        &none            &kp BSPC
                &kp TAB     &none        &kp ASTRK    &kp TILDE      &kp UNDER       &kp AMPS                    &kp LBRC       &kp LPAR         &kp LBKT            &kp LT       &kp SEMICOLON    &kp APOSTROPHE
                &kp RC(S)   &none        &none        &none          &none           &none                       &kp RBRC       &kp RPAR         &kp RBKT            &kp GT       &kp BSLH         &kp DELETE
                                                      &trans         &mo ADMIN_LAYER &kp SPACE                   &kp RET        &trans           &trans
            >;
        };

        functions_layer {
            bindings = <
                &none       &kp F1       &kp F2       &kp F3         &kp F4          &kp F5                      &kp F6         &kp F7           &kp F8              &kp F9       &kp F10          &none
                &none       &kp F11      &kp F12      &none          &none           &none                       &kp C_PREV     &kp C_VOL_DN     &kp C_VOL_UP        &kp C_NEXT   &none            &none
                &none       &none        &none        &none          &none           &none                       &none          &kp C_MUTE       &kp C_PLAY_PAUSE    &none        &none            &none
                                                      &none          &none           &none                       &none          &none            &none
            >;
        };

        admin_layer {
            bindings = <
                &bootloader &none        &none        &none          &none           &none                       &none          &none            &none               &none        &none            &bootloader
                &none       &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1   &bt BT_SEL 0    &bt BT_SEL 4                &none          &bt BT_CLR       &none               &out OUT_USB &out OUT_BLE     &none
                &none       &none        &none        &none          &none           &none                       &none          &none            &none               &none        &none            &none
                                                      &none          &none           &none                       &none          &none            &none
            >;
        };
    };
};
