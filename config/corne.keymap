/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        music {
            bindings = <&tog 4>;
            key-positions = <36 37 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I       &kp O    &kp P     &kp BSPC
&kp LSHFT  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K       &kp L    &kp SEMI  &kp LBKT
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp ESC
                         &kp LALT  &mo 2  &kp SPACE    &kp RET  &mo 1  &kp INSERT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  7  |  8  |  9  |    |    |  |
            // | |  |  |  |  |  |                       |  4  |  5  |  6  |  0 |  UP |      |
            // | SHFT |     |     |     |QMARK| EXCL|   |  1  |  2  |  3  | LFT | DWN | RGT  |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB         &none   &none   &none     &none           &none                   &kp N7        &kp N8        &kp N9        &kp PLUS  &kp MINUS       &kp DELETE
&kp LEFT_SHIFT  &none   &none   &none     &kp ASTERISK    &kp LEFT_PARENTHESIS    &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0    &kp UP_ARROW    &kp KP_DIVIDE
&kp LCTRL       &trans  &trans  &trans    &kp UNDERSCORE  &kp EXCL                &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT
                                &kp LGUI  &trans          &kp SPACE               &kp RET       &trans        &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp C_PLAY_PAUSE  &kp C_PREVIOUS  &kp C_NEXT  &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP         &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS         &kp MINUS     &kp ASTERISK
&kp LCTRL         &bt BT_PRV      &bt BT_NXT  &bt BT_CLR  &kp ASTERISK       &kp LEFT_PARENTHESIS    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_NUMBER_0  &kp UP_ARROW  &kp KP_DIVIDE
&kp LSHFT         &trans          &trans      &trans      &kp UNDER          &kp EXCLAMATION         &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp LEFT         &kp DOWN      &kp RIGHT
                                              &kp LGUI    &trans             &kp SPACE               &kp RET          &trans           &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans       &kp RIGHT_PARENTHESIS  &kp DOUBLE_QUOTES  &kp PIPE       &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &kp AT                 &kp SINGLE_QUOTE   &kp BSLH       &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &trans                 &trans             &trans         &trans  &trans  &trans
                        &trans  &trans  &kp SPACE    &kp ENTER              &trans             &kp RIGHT_ALT
            >;
        };

        layer_5 {
            bindings = <
&kp C_PLAY_PAUSE  &kp C_PREVIOUS  &kp C_NEXT  &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP         &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS         &kp MINUS     &kp ASTERISK
&kp LCTRL         &trans          &trans      &trans      &kp ASTERISK       &kp LEFT_PARENTHESIS    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_NUMBER_0  &kp UP_ARROW  &kp KP_DIVIDE
&kp LSHFT         &trans          &trans      &trans      &kp UNDER          &kp EXCLAMATION         &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp LEFT         &kp DOWN      &kp RIGHT
                                              &kp LGUI    &trans             &kp SPACE               &kp RET          &trans           &kp RALT
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        extra_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
